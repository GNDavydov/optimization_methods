# Copyright 2021 GNDavydov

import numpy as np

'''
Поиск экстремума функции методом случайного поиска

Включает:
 1) функция случайного поиска 
 2) функция количества точек для заданной вероятности
'''


def count_iterations(p, q):
    '''
    Функция, считающая количество испытаний N от вероятности P и q

    :param p: вероятность того, что найденная точка минимума находится в интервале неопределенности
    :param q: вероятность попадания в интервал неопределенности для отдельно взятой точки
    :return: необходимое число испытаний N
    '''
    return np.ceil(np.log(1 - p) / np.log(1 - q)).astype(int)


def random_search(a, b, fun, p, q):
    '''
    Алгоритм случайного поиска экстремума

    :param a: Начальная граница отрезка
    :param b: Конечная граница отрезка
    :param fun: Исходная функция
    :param p: вероятность того, что найденная точка минимума находится в интервале неопределенности
    :param q: вероятность попадания в интервал неопределенности для отдельно взятой точки
    :return: минимум функции f(x)
    '''

    f_min = None
    x_min = None
    n = count_iterations(p, q)

    for i in range(n):
        x = np.random.uniform(a, b)
        if f_min is None or fun(x) < f_min:
            f_min = fun(x)
            x_min = x

    return x_min
